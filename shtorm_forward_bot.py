
from telethon import TelegramClient, events
import asyncio
import re
import random

# ‚úÖ Telegram API –¥–∞–Ω–Ω—ã–µ
api_id = 26232340
api_hash = '6bb113f9e12926d4dc1f56a89ab6534f'
session_name = 'shtorm_session'

# ‚úÖ –ö–∞–Ω–∞–ª-–ø—Ä–∏—ë–º–Ω–∏–∫
TARGET_CHANNEL = 'shtormnews'

# ‚úÖ –ö–∞–Ω–∞–ª—ã-–∏—Å—Ç–æ—á–Ω–∏–∫–∏
SOURCE_CHANNELS = [
    'bazabazon',
    'shot_shot',
    'readovkanews',
    'ENews112',
    'bezzludey'
]

# üîÅ –£–Ω–∏–∫–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞
def rewrite_text(text):
    if not text:
        return ""
    replacements = {
        "–ø—Ä–æ–∏–∑–æ—à–ª–æ": "—Å–ª—É—á–∏–ª–æ—Å—å",
        "—Å–æ–æ–±—â–∞—é—Ç": "–ø–µ—Ä–µ–¥–∞—é—Ç",
        "–ø–æ—è–≤–∏–ª–æ—Å—å –≤–∏–¥–µ–æ": "–æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã –∫–∞–¥—Ä—ã",
        "–≤–∏–¥–µ–æ": "–≤–∏–¥–µ–æ–∑–∞–ø–∏—Å—å",
        "–∫–∞–¥—Ä—ã": "–∑–∞–ø–∏—Å—å",
        "–∏–Ω—Ü–∏–¥–µ–Ω—Ç": "—Å–æ–±—ã—Ç–∏–µ",
        "–Ω–∞ –º–µ—Å—Ç–µ": "–ø–æ –¥–∞–Ω–Ω—ã–º —Å –º–µ—Å—Ç–∞",
        "–≤ —Å–µ—Ç–∏": "–≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ"
    }
    for old, new in replacements.items():
        text = re.sub(rf'\b{old}\b', new, text, flags=re.IGNORECASE)
    return text.strip()

# ‚úÖ –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å—å
def build_caption(original_text, sender):
    unique = rewrite_text(original_text)
    footer = f"\n\n<i>–ò—Å—Ç–æ—á–Ω–∏–∫ –º–µ–¥–∏–∞: @{sender}</i>"
    return unique + footer if unique else footer

client = TelegramClient(session_name, api_id, api_hash)

@client.on(events.NewMessage(chats=SOURCE_CHANNELS))
async def handler(event):
    sender = (await event.get_chat()).username
    if not sender:
        return

    # –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –º–µ–¥–∏–∞
    if event.photo or event.video or event.document:
        original_text = event.message.text or ""
        caption = build_caption(original_text, sender)
        try:
            await client.send_message(
                entity=TARGET_CHANNEL,
                file=event.media,
                message=caption,
                parse_mode='html'
            )
            print(f"‚úÖ –ü–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –∏–∑ @{sender}")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")

async def main():
    print("ü§ñ –ë–æ—Ç —Å–ª—É—à–∞–µ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–∏...")
    await client.start()
    await client.run_until_disconnected()

if __name__ == '__main__':
    asyncio.run(main())
